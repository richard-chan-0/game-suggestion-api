AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >
  Game Suggestion API - Flask app deployed to AWS Lambda

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.12

Resources:
  SharedLogicLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: game-suggestion-api-shared-layer
      ContentUri: shared-logic-layer/
      CompatibleRuntimes:
        - python3.12
      Description: Shared logic layer for Lambda functions

  SharedDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: game-suggestion-api-dependencies-layer
      ContentUri: dependency-layer/
      CompatibleRuntimes:
        - python3.12
      Description: Shared dependencies layer for Lambda functions

  RestApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: game-suggestion-api-rest-function
      Handler: lambda_handler.lambda_handler
      CodeUri: lambdas/rest/
      Runtime: python3.12
      Description: Game Suggestion API Lambda Function
      Events:
        GetPlayerByName:
          Type: Api
          Properties:
            Path: /player
            Method: GET
            RestApiId: !Ref RestApi
        AddPlayer:
          Type: Api
          Properties:
            Path: /player
            Method: POST
            RestApiId: !Ref RestApi
      Layers:
        - !Ref SharedLogicLayer
        - !Ref SharedDependenciesLayer
      Environment:
        Variables:
          TINYDB_BUCKET: !Ref TinyDBBucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TinyDBBucket

  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: game-suggestion-api-rest-api
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  GrpcApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: game-suggestion-api-grpc-function
      Handler: lambda_handler.lambda_handler
      CodeUri: lambdas/grpc/
      Runtime: python3.12
      Description: Game Suggestion API Lambda Function
      Events:
        GetCommands:
          Type: Api
          Properties:
            Path: /commands
            Method: GET
            RestApiId: !Ref GrpcApi
      Layers:
        - !Ref SharedLogicLayer
        - !Ref SharedDependenciesLayer
      Environment:
        Variables:
          TINYDB_BUCKET: !Ref TinyDBBucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TinyDBBucket

  GrpcApi:
    # TODO: protocol is REST needs to be fixed to grpc if available
    Type: AWS::Serverless::Api
    Properties:
      Name: game-suggestion-api-grpc-api
      StageName: Prod # stages?
      Cors:
        AllowMethods: "'GET,POST'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  TinyDBBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-tinydb-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

Outputs:
  RestApiUrl:
    Description: "API Gateway endpoint URL for REST API"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  GrpcApiUrl:
    Description: "API Gateway endpoint URL for gRPC API"
    Value: !Sub "https://${GrpcApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
